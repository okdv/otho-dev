[{"/home/otho/Desktop/dev/otho-dev/frontend/src/App.js":"1","/home/otho/Desktop/dev/otho-dev/frontend/src/reportWebVitals.js":"2","/home/otho/Desktop/dev/otho-dev/frontend/src/components/link-box/LinkBox.js":"3","/home/otho/Desktop/dev/otho-dev/frontend/src/index.js":"4","/home/otho/Desktop/dev/otho-dev/frontend/src/components/modal-row/ModalRow.js":"5","/home/otho/Desktop/dev/otho-dev/frontend/src/components/icon-text/IconText.js":"6","/home/otho/Desktop/dev/otho-dev/frontend/src/components/footer/Footer.js":"7"},{"size":2833,"mtime":1611843316529,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1611417895959,"results":"10","hashOfConfig":"9"},{"size":2645,"mtime":1611759006470,"results":"11","hashOfConfig":"9"},{"size":500,"mtime":1611417895959,"results":"12","hashOfConfig":"13"},{"size":643,"mtime":1611803122645,"results":"14","hashOfConfig":"9"},{"size":883,"mtime":1611722228556,"results":"15","hashOfConfig":"13"},{"size":1703,"mtime":1611722366657,"results":"16","hashOfConfig":"9"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nnjzt4",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u9tkf4",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/otho/Desktop/dev/otho-dev/frontend/src/App.js",[],"/home/otho/Desktop/dev/otho-dev/frontend/src/reportWebVitals.js",[],"/home/otho/Desktop/dev/otho-dev/frontend/src/components/link-box/LinkBox.js",["32"],"import React from 'react'\nimport Modal from 'react-modal'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst customStyles = {\n    content: {\n        backgroundColor: \"#0A0013\",\n        color: \"white\",\n\n    }\n}\n\nconst ProjectModal = (props) => {\n    return (\n        <div className=\"flex-between\">\n            <p>This is a paragraph</p>\n            <div className=\"lightpink-txt center\">\n                <div>\n                    <h5 className=\"lightblue-txt\">Languages</h5>\n                    <div>\n                        <FontAwesomeIcon icon={['fab','html5']} />\n                        <FontAwesomeIcon icon={['fab','css3-alt']} />\n                        <FontAwesomeIcon icon={['fab','js']} />\n                    </div>\n                </div>\n                <div>\n                    <h5 className=\"lightblue-txt\">Tools</h5>\n                    <div>\n                        <FontAwesomeIcon icon={['fab','aws']} />\n                        <FontAwesomeIcon icon={['fab','wordpress']} />\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst CharityModal = (props) => {\n    return (\n        <div>\n            <p>\n                This is a charity modal\n            </p>\n        </div>\n    )\n}\n\nconst LinkBox = (props) => {\n    const [modalIsOpen, setIsOpen] = React.useState(false)\n    \n    function openModal() {\n        setIsOpen(true)\n    }\n\n    function closeModal() {\n        setIsOpen(false)\n    }\n\n    return (\n        <div>\n            <img onClick={openModal} src=\"https://via.placeholder.com/150\" alt=\"\" className=\"clickable center logo\" />\n            <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={closeModal}\n                style={customStyles}\n            >\n                <div className=\"flex-between\">\n                    <div><h4 className=\"lightpink-txt\">This is the modal title</h4></div>\n                    <div id=\"exit-btn\" className=\"clickable\">\n                        <FontAwesomeIcon \n                            style={{color:\"red\",fontSize:\"1.5em\"}} \n                            onClick={closeModal} \n                            icon=\"times-circle\" \n                        />\n                    </div>\n                    \n                </div>\n                {\n                    props.row && props.row === 1 ? <CharityModal /> : <ProjectModal /> \n                }\n                <div className=\"center\">\n                    <a href=\"#\">\n                        <button>Visit</button>\n                    </a>\n                </div>\n            </Modal>\n        </div>\n    )\n}\n\nexport default LinkBox","/home/otho/Desktop/dev/otho-dev/frontend/src/index.js",[],"/home/otho/Desktop/dev/otho-dev/frontend/src/components/modal-row/ModalRow.js",[],"/home/otho/Desktop/dev/otho-dev/frontend/src/components/icon-text/IconText.js",[],"/home/otho/Desktop/dev/otho-dev/frontend/src/components/footer/Footer.js",["33","34","35"],{"ruleId":"36","severity":1,"message":"37","line":84,"column":21,"nodeType":"38","endLine":84,"endColumn":33},{"ruleId":"36","severity":1,"message":"37","line":32,"column":13,"nodeType":"38","endLine":35,"endColumn":14},{"ruleId":"36","severity":1,"message":"37","line":42,"column":13,"nodeType":"38","endLine":45,"endColumn":14},{"ruleId":"36","severity":1,"message":"37","line":52,"column":13,"nodeType":"38","endLine":55,"endColumn":14},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]