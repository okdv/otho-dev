[{"/home/otho/Desktop/dev/otho-dev/frontend/src/App.js":"1","/home/otho/Desktop/dev/otho-dev/frontend/src/reportWebVitals.js":"2","/home/otho/Desktop/dev/otho-dev/frontend/src/components/link-box/LinkBox.js":"3","/home/otho/Desktop/dev/otho-dev/frontend/src/index.js":"4","/home/otho/Desktop/dev/otho-dev/frontend/src/components/modal-row/ModalRow.js":"5","/home/otho/Desktop/dev/otho-dev/frontend/src/components/icon-text/IconText.js":"6","/home/otho/Desktop/dev/otho-dev/frontend/src/components/footer/Footer.js":"7","/home/otho/Desktop/dev/otho-dev/frontend/src/graphql/queries.js":"8","/home/otho/Desktop/dev/otho-dev/frontend/src/aws-exports.js":"9","/home/otho/Desktop/dev/otho-dev/frontend/src/components/parallax-background/ParallaxBackground.js":"10","/home/otho/Desktop/dev/otho-dev/frontend/src/utils/helpers.js":"11","/home/otho/Desktop/dev/otho-dev/frontend/src/components/section/Section.js":"12","/home/otho/Desktop/dev/otho-dev/frontend/src/graphql/custom.js":"13"},{"size":4712,"mtime":1612836585604,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1611417895959,"results":"16","hashOfConfig":"15"},{"size":5215,"mtime":1612765364612,"results":"17","hashOfConfig":"15"},{"size":500,"mtime":1611417895959,"results":"18","hashOfConfig":"15"},{"size":643,"mtime":1611803122645,"results":"19","hashOfConfig":"15"},{"size":883,"mtime":1611722228556,"results":"20","hashOfConfig":"21"},{"size":1943,"mtime":1612589281659,"results":"22","hashOfConfig":"15"},{"size":10807,"mtime":1612722785900,"results":"23","hashOfConfig":"15"},{"size":865,"mtime":1612722788464,"results":"24","hashOfConfig":"15"},{"size":2342,"mtime":1612752095363,"results":"25","hashOfConfig":"15"},{"size":235,"mtime":1612629004870,"results":"26","hashOfConfig":"15"},{"size":1006,"mtime":1612836717122,"results":"27","hashOfConfig":"15"},{"size":2020,"mtime":1612736603275,"results":"28","hashOfConfig":"15"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nnjzt4",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u9tkf4",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/otho/Desktop/dev/otho-dev/frontend/src/App.js",[],"/home/otho/Desktop/dev/otho-dev/frontend/src/reportWebVitals.js",[],["58","59"],"/home/otho/Desktop/dev/otho-dev/frontend/src/components/link-box/LinkBox.js",["60"],"import React, {useEffect} from 'react'\nimport Modal from 'react-modal'\n\nimport Amplify, { API, graphqlOperation } from 'aws-amplify'\nimport awsExports from \"../../aws-exports\"\nimport { sidebarByNameExpanded } from \"../../graphql/custom\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nAmplify.configure(awsExports)\n\nconst customStyles = {\n    content: {\n        backgroundColor: \"#0A0013\",\n        color: \"white\",\n\n    }\n}\n\nconst SidebarItem = (props) => {\n\n    const icons = props.data.iconItems.items || []\n\n    return (\n        <div className=\"sidebar-item\">\n            <h5>{props.data.title}</h5>\n            <div className=\"content-box\">\n                {\n                    icons.map((icon, i) => {\n                        console.log(icon)\n                        return icon.icon.link != null ? (\n                            <a href={icon.icon.link} key={i}>\n                                <FontAwesomeIcon className=\"lightblue-txt\" size={\"2x\"} icon={['fab', icon.icon.faIcon]} />\n                            </a>\n                        ) : (<span key={i}><FontAwesomeIcon className=\"lightblue-txt\" size={\"2x\"} icon={['fab', icon.icon.faIcon]} /></span>)\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nconst ModalContent = (props) => {\n    const [sidebarData, setSidebarData] = React.useState({\n        tools: null,\n        code: null,\n        sidebarPresent: false\n    })\n\n    const toolsName = (props.modalData.name) + \"-tools\"\n    const codeName = (props.modalData.name) + \"-code\"\n\n    useEffect(() => {\n        fetchSidebarData()\n    }, [])\n\n    async function fetchSidebarData() {\n        try {\n            const apiResponseTools = await API.graphql(graphqlOperation(sidebarByNameExpanded, {name: toolsName}))\n            const apiResponseCode = await API.graphql(graphqlOperation(sidebarByNameExpanded, {name: codeName}))\n            const toolsUsed = apiResponseTools.data.sidebarByName.items\n            const codeUsed = apiResponseCode.data.sidebarByName.items\n            const setMe = {\n                tools: toolsUsed.length > 0 ? toolsUsed[0] : null,\n                code: codeUsed.length > 0 ? codeUsed[0] : null,\n                sidebarPresent: toolsUsed.length > 0 || codeUsed.length > 0 ? true : false\n            }\n            setSidebarData(setMe)\n        } catch (err) {\n            console.log(\"Error in fetchSidebarData: \", err)\n        }\n    }\n\n    return (\n        <div className={\n            sidebarData.sidebarPresent === true ? \"flex-between modal-content\" : \"modal-content\"\n        }>\n            <div className=\"para-box\">\n                {\n                    props.modalData.paras && props.modalData.paras.length > 0 ? (\n                        props.modalData.paras.map((para, i) => {\n                            return <p key={i}>{para}</p> \n                        })\n                    ) : \"\"\n                }\n            </div>\n            {\n                sidebarData.sidebarPresent === true ? (\n                    <div className=\"sidebar lightpink-txt center\">\n                        {\n                            sidebarData.code != null ? (\n                                <SidebarItem data={sidebarData.code} />\n                            ) : \"\"\n                        }\n                        {\n                            sidebarData.tools != null ? (\n                                <SidebarItem data={sidebarData.tools} />\n                            ) : \"\"\n                        }\n                    </div>\n                ) : \"\"\n            }\n        </div>\n    )\n}\n\nconst LinkBox = (props) => {\n    const [modalIsOpen, setIsOpen] = React.useState(false)\n\n    function openModal() {\n        setIsOpen(true)\n    }\n\n    function closeModal() {\n        setIsOpen(false)\n    }\n\n    console.log(props)\n\n    return (\n        <div className=\"link-box\">\n            <img onClick={openModal} src={props.data.image != null ? props.data.image : \"https://via.placeholder.com/150\"} alt={props.data.title} className=\"clickable center logo\" />\n            <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={closeModal}\n                style={customStyles}\n                appElement={document.getElementById('App')}\n            >\n                <div className=\"flex-between\">\n                    <div><h4 className=\"lightpink-txt\">{props.data.title}</h4></div>\n                    <div id=\"exit-btn\" className=\"clickable\">\n                        <FontAwesomeIcon \n                            style={{color:\"red\",fontSize:\"1.5em\"}} \n                            onClick={closeModal} \n                            icon=\"times-circle\" \n                        />\n                    </div>\n                    \n                </div>\n                <br />\n                <ModalContent modalData={props.data} />\n                <br />\n                <div className=\"center\">\n                    <a href={props.data.link}>\n                        <button className=\"white-txt btn\">{props.data.cta && props.data.cta != null ? props.data.cta : \"See more\"}</button>\n                    </a>\n                </div>\n            </Modal>\n        </div>\n    )\n}\n\nexport default LinkBox","/home/otho/Desktop/dev/otho-dev/frontend/src/index.js",[],["61","62"],"/home/otho/Desktop/dev/otho-dev/frontend/src/components/modal-row/ModalRow.js",[],"/home/otho/Desktop/dev/otho-dev/frontend/src/components/icon-text/IconText.js",[],"/home/otho/Desktop/dev/otho-dev/frontend/src/components/footer/Footer.js",[],"/home/otho/Desktop/dev/otho-dev/frontend/src/graphql/queries.js",[],"/home/otho/Desktop/dev/otho-dev/frontend/src/aws-exports.js",[],"/home/otho/Desktop/dev/otho-dev/frontend/src/components/parallax-background/ParallaxBackground.js",[],"/home/otho/Desktop/dev/otho-dev/frontend/src/utils/helpers.js",[],"/home/otho/Desktop/dev/otho-dev/frontend/src/components/section/Section.js",[],"/home/otho/Desktop/dev/otho-dev/frontend/src/graphql/custom.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":55,"column":8,"nodeType":"69","endLine":55,"endColumn":10,"suggestions":"70"},{"ruleId":"63","replacedBy":"71"},{"ruleId":"65","replacedBy":"72"},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchSidebarData'. Either include it or remove the dependency array.","ArrayExpression",["75"],["73"],["74"],"no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},"Update the dependencies array to be: [fetchSidebarData]",{"range":"78","text":"79"},[1610,1612],"[fetchSidebarData]"]